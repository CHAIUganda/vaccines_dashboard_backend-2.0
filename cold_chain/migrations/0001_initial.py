# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2020-03-09 12:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ColdChainFacility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.District')),
            ],
        ),
        migrations.CreateModel(
            name='EligibleFacilityMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_eligible_facility', models.IntegerField(default=0)),
                ('total_number_immunizing_facility', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.District')),
            ],
        ),
        migrations.CreateModel(
            name='FacilityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Refrigerator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=255, unique=True)),
                ('make', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255)),
                ('supply_year', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cold_chain_facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cold_chain.ColdChainFacility')),
            ],
        ),
        migrations.CreateModel(
            name='RefrigeratorDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2019)),
                ('month', models.IntegerField(default=1)),
                ('available_net_storage_volume', models.IntegerField()),
                ('required_net_storage_volume', models.IntegerField()),
                ('functionality_status', models.CharField(choices=[('Working', 'Working'), ('Not working', 'Not working'), ('Needs repair', 'Needs repair')], default='Working', max_length=20)),
                ('temperature', models.FloatField(blank=True, help_text='below 2 degrees is freeze alarm, above 8 degrees is heat alarm', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.District')),
                ('refrigerator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cold_chain.Refrigerator')),
            ],
        ),
        migrations.AddField(
            model_name='coldchainfacility',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cold_chain.FacilityType'),
        ),
        migrations.AlterUniqueTogether(
            name='refrigeratordetail',
            unique_together=set([('refrigerator', 'district', 'year', 'month')]),
        ),
    ]
