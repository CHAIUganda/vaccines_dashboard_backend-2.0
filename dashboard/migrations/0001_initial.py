# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-05-18 11:59
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone
import picklefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('access_level', models.CharField(choices=[(b'Warehouse', b'Warehouse'), (b'District', b'District'), (b'IP', b'IP')], max_length=50)),
                ('access_area', models.CharField(blank=True, max_length=250, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(db_index=True, max_length=256)),
                ('year', models.IntegerField(default=2014)),
                ('month', models.IntegerField(choices=[(1, b'Jan'), (2, b'Feb'), (3, b'Mar'), (4, b'Apr'), (5, b'May'), (6, b'Jun'), (7, b'Jul'), (8, b'Aug'), (9, b'Sep'), (10, b'Oct'), (11, b'Nov'), (12, b'Dec')], default=1)),
                ('vaccine', models.CharField(db_index=True, max_length=256)),
                ('at_hand', models.FloatField(default=0)),
                ('consumed', models.FloatField(default=0)),
                ('received', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='YearMonth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=256, unique=True)),
                ('state', picklefield.fields.PickledObjectField(editable=False)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='stock',
            unique_together=set([('district', 'year', 'month', 'vaccine')]),
        ),
    ]
